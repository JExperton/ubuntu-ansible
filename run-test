#!/usr/bin/env bash
CONTAINER_NAME='ubuntu-ansible'
IMAGE_NAME='jexperton/ubuntu-ansible:latest'

function containerExists {
  return "$(sudo docker ps -a | grep $1 2> /dev/null)" != ""
}
function startContainer {
  sudo docker run -d -p 4022:22 -p 4080:80 -p 4443:443 --name $1 -it $2 > /dev/null 2>&1
}
function deleteContainer {
  sudo docker kill $1 > /dev/null 2>&1
  sudo docker rm $1 > /dev/null 2>&1
}
function imageExists {
  return "$(sudo docker images -q $1 2> /dev/null)" != ""
}
function buildImage {
  sudo docker build -t $1 . > /dev/null 2>&1
}
function getContainerIP {
  return $(docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" $1) 
}

# BEGIN

# kill and remove the container if exists
if containerExists $CONTAINER_NAME; then deleteContainer $CONTAINER_NAME; fi

# build the docker test image
if ! imageExists $IMAGE_NAME; then buildImage $IMAGE_NAME; fi

# run the test container
startContainer $CONTAINER_NAME $IMAGE_NAME

docker cp rootkey.pub $CONTAINER_NAME:/root/.ssh/authorized_keys
docker exec -it $CONTAINER_NAME sh -c "chmod 600 /root/.ssh/authorized_keys"
docker exec -it $CONTAINER_NAME sh -c "ssh-agent -s" > /dev/null 2>&1
ssh-keygen -f "~/.ssh/known_hosts" -R getContainerIP

printf "\nUse 123456 as root's password\n\n"

# run the playbook
sh ./run root getContainerIP $1
